name: CI
on:
  workflow_dispatch:
  schedule:
    - cron: "0 16 * * *"

jobs:
  check:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Should build?
        id: should_build
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e

          # Fetch latest updates
          git fetch origin update

          # Check if update branch exists
          if ! git rev-parse --verify origin/update >/dev/null 2>&1; then
            echo "No update branch found, building by default."
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check if build.md changed
          if ! git diff --quiet origin/update -- build.md; then
            echo "build.md changed, should build."
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Run build.sh with --config-update and check output
          UPDATE_CFG=$(./build.sh config.toml --config-update || true)
          echo "UPDATE_CFG='$UPDATE_CFG'"

          if [ -n "$UPDATE_CFG" ]; then
            echo "Config changed, should build."
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
          else
            echo "Nothing changed, skipping build."
            echo "SHOULD_BUILD=0" >> $GITHUB_OUTPUT
          fi

      - name: Clear older runs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run list -L400 --json databaseId -q '.[].databaseId' | tail -n+10 | xargs -IID gh api "repos/$GITHUB_REPOSITORY/actions/runs/ID" -X DELETE || :

    outputs:
      SHOULD_BUILD: ${{ steps.should_build.outputs.SHOULD_BUILD }}

  build:
    permissions: write-all
    needs: check
    uses: ./.github/workflows/build.yml
    if: ${{ needs.check.outputs.SHOULD_BUILD == '1' }}
    secrets: inherit
